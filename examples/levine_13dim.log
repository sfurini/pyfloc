Reading data from ./data/flowc/levine_13dim.fcs with mode all conditions unknown
Read 167044 samples from ./data/flowc/levine_13dim.fcs
Removing 85297 samples with feature label equal to nan
Removing 85297 samples
Experiment 0 goes from sample 0 to sample 167044
Removing 85297 samples from experiment 0
Running normalization for feature CD123 in experiment 0 with mode arcsin_abs
Running normalization for feature CD90 in experiment 0 with mode arcsin_abs
Running normalization for feature CD3 in experiment 0 with mode arcsin_abs
Running normalization for feature CD34 in experiment 0 with mode arcsin_abs
Running normalization for feature CD11b in experiment 0 with mode arcsin_abs
Running normalization for feature CD45RA in experiment 0 with mode arcsin_abs
Running normalization for feature CD4 in experiment 0 with mode arcsin_abs
Running normalization for feature CD38 in experiment 0 with mode arcsin_abs
Running normalization for feature CD45 in experiment 0 with mode arcsin_abs
Running normalization for feature CD20 in experiment 0 with mode arcsin_abs
Running normalization for feature CD8 in experiment 0 with mode arcsin_abs
Running normalization for feature CD19 in experiment 0 with mode arcsin_abs
Running normalization for feature CD33 in experiment 0 with mode arcsin_abs
Running a clustering step for features CD123,CD90,CD3,CD34,CD11b,CD45RA,CD4,CD38,CD45,CD20,CD8,CD19,CD33
Calculating distance matrix with metric euclidean
Computing densities using kernel with radius     0.849938
Considering as cluster centers the samples above 2.000000 stds along delta
Searching neighbours
Test with percent 0.020000 - energy 4.214623 - n_clusters 1789
Computing densities using kernel with radius     0.926706
Considering as cluster centers the samples above 2.000000 stds along delta
Searching neighbours
Test with percent 0.030000 - energy 3.555009 - n_clusters 947
Computing densities using kernel with radius     0.983566
Considering as cluster centers the samples above 2.000000 stds along delta
Searching neighbours
Test with percent 0.040000 - energy 5.277354 - n_clusters 8490
Computing densities using kernel with radius     1.028857
Considering as cluster centers the samples above 2.000000 stds along delta
Searching neighbours
Test with percent 0.050000 - energy 3.670700 - n_clusters 764
Computing densities using kernel with radius     1.114211
Considering as cluster centers the samples above 2.000000 stds along delta
Searching neighbours
Test with percent 0.075000 - energy 4.272785 - n_clusters 1174
Computing densities using kernel with radius     1.177990
Considering as cluster centers the samples above 2.000000 stds along delta
Searching neighbours
Test with percent 0.100000 - energy 3.709842 - n_clusters 492
Computing densities using kernel with radius     1.342498
Considering as cluster centers the samples above 2.000000 stds along delta
Searching neighbours
Test with percent 0.200000 - energy 4.820713 - n_clusters 250
Computing densities using kernel with radius     1.592095
Considering as cluster centers the samples above 2.000000 stds along delta
Searching neighbours
Test with percent 0.500000 - energy 4.878762 - n_clusters 199
Computing densities using kernel with radius     1.816911
Considering as cluster centers the samples above 2.000000 stds along delta
Searching neighbours
Test with percent 1.000000 - energy 6.077464 - n_clusters 61
Computing densities using kernel with radius     2.090557
Considering as cluster centers the samples above 2.000000 stds along delta
Searching neighbours
Test with percent 2.000000 - energy 6.780533 - n_clusters 41
Computing densities using kernel with radius     2.594346
Considering as cluster centers the samples above 2.000000 stds along delta
Searching neighbours
Test with percent 5.000000 - energy 4.796755 - n_clusters 32
Computing densities using kernel with radius     3.255895
Considering as cluster centers the samples above 2.000000 stds along delta
Searching neighbours
Test with percent 10.000000 - energy 1.381417 - n_clusters 58
Clustering with the Distance-Peaks algorithm, with percent 2.000000
Computing densities using kernel with radius     2.090557
Considering as cluster centers the samples above 2.000000 stds along delta
Searching neighbours
Assigning samples to cluster centers with halo 0.000000
/home/simone/anaconda3/lib/python3.6/site-packages/fcsparser/api.py:332: UserWarning: The default channel names (defined by the $PnS parameter in the FCS file) were not unique. To avoid problems in downstream analysis, the channel names have been switched to the alternate channel names defined in the FCS file. To avoid seeing this warning message, explicitly instruct the FCS parser to use the alternate channel names by specifying the channel_naming parameter.
  warnings.warn(msg)
../pyfloc/cluster.py:840: RuntimeWarning: divide by zero encountered in log10
  rho_norm_log = np.log10(rho_norm)
../pyfloc/cluster.py:840: RuntimeWarning: invalid value encountered in log10
  rho_norm_log = np.log10(rho_norm)
../pyfloc/cluster.py:352: RuntimeWarning: invalid value encountered in true_divide
  f_matrix = 2.0 * precision_matrix * recall_matrix / (precision_matrix + recall_matrix)
Results of clustering with method Density Peaks
	Cluster 0
		number of samples = 8981
		pairing label[1] = 6779
		precision = 0.753925
		recall = 0.998820
		f-score = 0.859264
	Cluster 1
		number of samples = 43
		pairing label[14] = 152
		precision = 0.093023
		recall = 0.026316
		f-score = 0.041026
	Cluster 2
		number of samples = 2
		pairing label[16] = 6987
		precision = 0.000000
		recall = 0.000000
		f-score = 0.000000
	Cluster 3
		number of samples = 335
		pairing label[3] = 253
		precision = 0.468657
		recall = 0.620553
		f-score = 0.534014
	Cluster 4
		number of samples = 3
		pairing label[21] = 5
		precision = 0.000000
		recall = 0.000000
		f-score = 0.000000
	Cluster 5
		number of samples = 19390
		pairing label[4] = 12030
		precision = 0.619856
		recall = 0.999086
		f-score = 0.765054
	Cluster 6
		number of samples = 4
		pairing label[19] = 468
		precision = 0.000000
		recall = 0.000000
		f-score = 0.000000
	Cluster 7
		number of samples = 4
		pairing label[5] = 73
		precision = 0.000000
		recall = 0.000000
		f-score = 0.000000
	Cluster 8
		number of samples = 3
	Cluster 9
		number of samples = 42
		pairing label[6] = 261
		precision = 0.952381
		recall = 0.153257
		f-score = 0.264026
	Cluster 10
		number of samples = 5
		pairing label[7] = 502
		precision = 0.600000
		recall = 0.005976
		f-score = 0.011834
	Cluster 11
		number of samples = 2
	Cluster 12
		number of samples = 28
	Cluster 13
		number of samples = 7993
		pairing label[8] = 7796
		precision = 0.954835
		recall = 0.978964
		f-score = 0.966749
	Cluster 14
		number of samples = 4
	Cluster 15
		number of samples = 3
	Cluster 16
		number of samples = 3
		pairing label[9] = 608
		precision = 0.666667
		recall = 0.003289
		f-score = 0.006547
	Cluster 17
		number of samples = 4
	Cluster 18
		number of samples = 20885
		pairing label[10] = 13964
		precision = 0.667082
		recall = 0.997708
		f-score = 0.799564
	Cluster 19
		number of samples = 18
	Cluster 20
		number of samples = 2
	Cluster 21
		number of samples = 1188
		pairing label[11] = 7821
		precision = 0.977273
		recall = 0.148446
		f-score = 0.257742
	Cluster 22
		number of samples = 3
	Cluster 23
		number of samples = 3
	Cluster 24
		number of samples = 9
		pairing label[12] = 3684
		precision = 0.666667
		recall = 0.001629
		f-score = 0.003249
	Cluster 25
		number of samples = 295
		pairing label[13] = 194
		precision = 0.301695
		recall = 0.458763
		f-score = 0.364008
	Cluster 26
		number of samples = 1
	Cluster 27
		number of samples = 11
		pairing label[15] = 3025
		precision = 1.000000
		recall = 0.003636
		f-score = 0.007246
	Cluster 28
		number of samples = 1
	Cluster 29
		number of samples = 1
	Cluster 30
		number of samples = 6
	Cluster 31
		number of samples = 16197
		pairing label[17] = 9564
		precision = 0.588319
		recall = 0.996340
		f-score = 0.739800
	Cluster 32
		number of samples = 7
	Cluster 33
		number of samples = 3689
		pairing label[18] = 3864
		precision = 0.941990
		recall = 0.899327
		f-score = 0.920164
	Cluster 34
		number of samples = 375
		pairing label[20] = 293
		precision = 0.490667
		recall = 0.627986
		f-score = 0.550898
	Cluster 35
		number of samples = 47
		pairing label[2] = 1278
		precision = 0.063830
		recall = 0.002347
		f-score = 0.004528
	Cluster 36
		number of samples = 115
		pairing label[0] = 912
		precision = 0.113043
		recall = 0.014254
		f-score = 0.025316
	Cluster 37
		number of samples = 2
	Cluster 38
		number of samples = 210
		pairing label[22] = 240
		precision = 0.909524
		recall = 0.795833
		f-score = 0.848889
	Cluster 39
		number of samples = 3
	Cluster 40
		number of samples = 1830
		pairing label[23] = 994
		precision = 0.485246
		recall = 0.893360
		f-score = 0.628895
	Labels found: [1, 3, 4, 6, 8, 10, 11, 13, 17, 18, 20, 22, 23]
	Average f-score = 0.358284 +/- 0.364392
